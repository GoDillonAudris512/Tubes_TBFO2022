S -> IF_METHOD
S -> IF_METHOD CURFEW_OPEN
S -> ELSE_IF_METHOD
S -> ELSE_IF_METHOD CURFEW_OPEN
S -> ELSE_METHOD
S -> ELSE_METHOD CURFEW_OPEN
S -> WHILE_METHOD
S -> WHILE_METHOD CURFEW_OPEN
S -> FOR_METHOD
S -> FOR_METHOD CURFEW_OPEN
S -> BREAK_METHOD
S -> BREAK_METHOD CURFEW_CLOSE
S -> CONTINUE_METHOD
S -> CONTINUE_METHOD CURFEW_CLOSE
S -> FUNCTION_METHOD
S -> FUNCTION_METHOD CURFEW_OPEN
S -> RETURN_METHOD
S -> RETURN_METHOD CURFEW_CLOSE
S -> TRY_METHOD
S -> TRY_METHOD CURFEW_OPEN
S -> CATCH_METHOD
S -> CATCH_METHOD CURFEW_OPEN
S -> THROW_METHOD
S -> THROW_METHOD CURFEW_OPEN
S -> FINALLY_METHOD
S -> FINALLY_METHOD CURFEW_OPEN
S -> SWITCH_METHOD 
S -> SWITCH_METHOD CURFEW_OPEN
S -> CASE_METHOD
S -> DEFAULT_METHOD
S -> LET_METHOD
S -> VAR_METHOD
S -> CONST_METHOD
S -> FUNCTION_CALLED
S -> CURFEW_OPEN
S -> CURFEW_CLOSE
S -> EXPRESSION
S -> UNER_OPERATION
UNER_OPERATION -> EXPRESSION_IN_PAREN UNER_OPERATOR
IF_METHOD -> IF IN_PAREN
ELSE_IF_METHOD -> ELSE IF IN_PAREN
ELSE_METHOD -> ELSE
WHILE_METHOD -> WHILE IN_PAREN
FOR_METHOD -> FOR IN_FOR_PAREN
BREAK_METHOD -> BREAK
CONTINUE_METHOD -> CONTINUE
FUNCTION_METHOD -> FUNCTION OBJECT IN_FUNC_PAREN
RETURN_METHOD -> RETURN
RETURN_METHOD -> RETURN EXPRESSION
TRY_METHOD -> TRY
CATCH_METHOD -> CATCH
THROW_METHOD -> THROW
THROW_METHOD -> THROW EXPRESSION_IN_PAREN
FINALLY_METHOD -> FINALLY
SWITCH_METHOD -> SWITCH IN_PAREN
CASE_METHOD -> CASE EXPRESSION_IN_PAREN COLON
DEFAULT_METHOD -> DEFAULT COLON
LET_METHOD -> LET LET_OBJECT
LET_OBJECT -> OBJECT
LET_OBJECT -> OBJECT COMMA LET_OBJECT
LET_OBJECT -> OBJECT ASSIGNMENT EXPRESSION
VAR_METHOD -> VAR VAR_OBJECT
VAR_OBJECT -> PARAM
VAR_OBJECT -> PARAM ASSIGNMENT EXPRESSION_IN_PAREN
CONST_METHOD -> CONST PARAM ASSIGNMENT EXPRESSION_IN_PAREN
IN_FUNC_PAREN -> PAREN_OPEN PARAM PAREN_CLOSE
PARAM -> OBJECT
PARAM -> PARAM_ASSIGN
PARAM -> OBJECT COMMA PARAM
PARAM -> PARAM_ASSIGN COMMA PARAM
PARAM_ASSIGN -> DATA_TYPE ASSIGNMENT PARAM_ASSIGN
PARAM_ASSIGN -> DATA_TYPE ASSIGNMENT DATA_TYPE
IN_FOR_PAREN -> PAREN_OPEN EXPRESSION SEMICOLON EXPRESSION SEMICOLON EXPRESSION PAREN_CLOSE
IN_PAREN -> PAREN_OPEN EXPRESSION_IN_PAREN PAREN_CLOSE
IN_PAREN -> PAREN_OPEN PAREN_CLOSE
IN_BRACKET -> BRACKET_OPEN EXPRESSION_IN_BRACKET BRACKET_CLOSE
IN_BRACKET -> BRACKET_OPEN BRACKET_CLOSE
EXPRESSION_IN_BRACKET -> EXPRESSION_IN_PAREN
EXPRESSION_IN_PAREN -> EXPRESSION
EXPRESSION_IN_PAREN -> EXP_COMPARATION
EXPRESSION -> EXP_ASSIGNMENT
EXPRESSION_IN_PAREN -> EXPRESSION SEPARATE_EXP
SEPARATE_EXP -> COMMA EXPRESSION_IN_PAREN
EXP_COMPARATION -> EXPRESSION COMPARATOR EXPRESSION
EXP_ASSIGNMENT -> EXPRESSION ASSIGNMENT EXPRESSION
EXP_ASSIGNMENT -> EXPRESSION ASSIGNOR EXPRESSION
EXPRESSION -> NUM
EXPRESSION -> BOOLEAN
EXPRESSION -> NUM DOT NUM
EXPRESSION -> IN_PAREN
EXPRESSION -> IN_BRACKET
EXPRESSION -> NULL
EXPRESSION -> OBJECT
EXPRESSION -> FUNCTION_CALLED
EXPRESSION -> OBJECT DOT FUNCTION_CALLED
EXPRESSION -> EXPRESSION COMPARATOR EXPRESSION
EXPRESSION -> EXPRESSION OPERATOR EXPRESSION
EXPRESSION -> LEFT_OPERATOR EXPRESSION
EXPRESSION -> CONDITION_TERNARY
CONDITION_TERNARY -> EXPRESSION TERNARY EXPRESSION COLON EXPRESSION
DATA_TYPE -> OBJECT
DATA_TYPE -> NUM
DATA_TYPE -> BOOLEAN
DATA_TYPE -> NUM DOT NUM
DATA_TYPE -> FUNCTION_CALLED
DATA_TYPE -> NULL
FUNCTION_CALLED -> OBJECT IN_PAREN
FUNCTION_CALLED -> OBJECT IN_PAREN DOT FUNCTION_CALLED
IF -> 'IF'
ELSE -> 'ELSE'
WHILE -> 'WHILE'
FOR -> 'FOR'
BREAK -> 'BREAK'
CONTINUE -> 'CONTINUE'
FUNCTION -> 'FUNCTION'
RETURN -> 'RETURN'
TRY -> 'TRY'
CATCH -> 'CATCH'
THROW -> 'THROW'
FINALLY -> 'FINALLY'
SWITCH -> 'SWITCH'
CASE -> 'CASE'
DEFAULT -> 'DEFAULT'
LET -> 'LET'
VAR -> 'VAR'
CONST -> 'CONST'
TERNARY -> 'TERNARY'
CURFEW_OPEN -> 'CURFEW_OPEN'
CURFEW_CLOSE -> 'CURFEW_CLOSE'
PAREN_OPEN -> 'PAREN_OPEN'
PAREN_CLOSE -> 'PAREN_CLOSE'
BRACKET_OPEN -> 'BRACKET_OPEN'
BRACKET_CLOSE -> 'BRACKET_CLOSE'
SEMICOLON -> 'SEMICOLON'
COLON -> 'COLON'
COMMA -> 'COMMA'
DOT -> 'DOT'
BOOLEAN -> 'TRUE'
BOOLEAN -> 'FALSE'
NUM -> 'NUM'
OBJECT -> 'OBJECT'
NULL -> 'NULL'
COMPARATOR -> 'AND_LOP'
COMPARATOR -> 'OR_LOP'
COMPARATOR -> 'EQUAL_TO'
COMPARATOR -> 'VALUETYPE_EQUAL_TO'
COMPARATOR -> 'NOT_EQUAL_TO'
COMPARATOR -> 'VALUETYPE_NOT_EQUAL_TO'
COMPARATOR -> 'GREATER_EQUAL'
COMPARATOR -> 'GREATER'
COMPARATOR -> 'LESSER_EQUAL'
COMPARATOR -> 'LESSER'
ASSIGNMENT -> 'ASSIGNMENT'
ASSIGNOR -> 'PLUS_ASSIGNMENT'
ASSIGNOR -> 'MINUS_ASSIGNMENT'
ASSIGNOR -> 'MULTIPLY_ASSIGNMENT'
ASSIGNOR -> 'DIVIDE_ASSIGNMENT'
ASSIGNOR -> 'MODULO_ASSIGNMENT'
ASSIGNOR -> 'EXPONENT_ASSIGNMENT'
ASSIGNOR -> 'AND_ASSIGNMENT'
ASSIGNOR -> 'OR_ASSIGNMENT'
ASSIGNOR -> 'XOR_ASSIGNMENT'
ASSIGNOR -> 'AND_LOP_ASSIGNMENT'
ASSIGNOR -> 'OR_LOP_ASSIGNMENT'
ASSIGNOR -> 'NULLISH_ASSIGNMENT'
OPERATOR -> NORMAL_OP
OPERATOR -> BINARY_OP
UNER_OPERATOR -> 'INCREMENT_OP'
UNER_OPERATOR -> 'DECREMENT_OP'
NORMAL_OP -> 'PLUS_OP'
NORMAL_OP -> 'MINUS_OP'
LEFT_OPERATOR -> 'MINUS_OP'
NORMAL_OP -> 'MULTIPLY_OP'
NORMAL_OP -> 'DIVIDE_OP'
NORMAL_OP -> 'EXPONENT_OP'
NORMAL_OP -> 'MODULO_OP'
NORMAL_OP -> 'NULLISH'
LEFT_OPERATOR -> 'NEGATE_OP'
BINARY_OP -> 'SHIFTLEFT_OP'
BINARY_OP -> 'SHIFTRIGHT_OP'
BINARY_OP -> 'U_SHIFTRIGHT_OP'
BINARY_OP -> 'XOR_OP'
BINARY_OP -> 'AND_OP'
BINARY_OP -> 'OR_OP'
COMPARATOR -> 'AND_LOP'
COMPARATOR -> 'OR_LOP'
LEFT_OPERATOR -> 'NOT_LOP'